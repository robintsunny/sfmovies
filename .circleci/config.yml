version: 2
jobs:
  build:
    docker:
      - image: circleci/node:6.11.1
        environment:
          - NODE_ENV: test
      - image: circleci/postgres:9.6.3
    # working_directory: ~/lob-api
    steps:
      # - restore_cache:
      #     keys:
      #       - source-v1-{{ .Branch }}-{{ .Revision }}
      #       - source-v1-{{ .Branch }}-
      #       - source-v1-
      # - checkout
      # - save_cache:
      #     key: source-v1-{{ .Branch }}-{{ .Revision }}
      #     paths:
      #       - ~/lob-api/.git
      # - restore_cache:
      #     keys:
      #       - yarn-v1-{{ checksum "yarn.lock" }}
      #       - yarn-v1-
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends pkg-config libpoppler-cpp-dev libpoppler-private-dev
      - run:
          name: Install Node dependencies
          command: |
            cp npmrc .npmrc
            yarn
      # - save_cache:
      #     key: yarn-v1-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/lob-api/node_modules
      #       - ~/.cache/yarn
      - run:
          name: Setup database
          command: |
            yarn db:migrate
            yarn db:seed
      - run:
          name: Run linter
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test:quiet
      - run:
          name: Enforce coverage
          command: yarn enforce
      - run:
          name: Compress coverage directory
          command: test -d coverage && tar czvf ~/coverage.tar.gz coverage
          when: on_fail
      - store_artifacts:
          path: ~/coverage.tar.gz
      # - run:
      #     name: Deploy to Convox
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         curl -Ls https://install.convox.com/linux.zip > convox.zip
      #         sudo unzip convox.zip -d /usr/local/bin
      #         git clean -xdff
      #         DESC="$(git log -n 1 --oneline)"
      #         convox deploy --app lob-api --rack lob/staging-v2 --description "$DESC" --wait
      #         convox build --app lob-api --rack lob/production-v2 --description "$DESC"
      #       fi
experimental:
  notify:
    branches:
      only:
        - master